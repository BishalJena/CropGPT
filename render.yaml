# Render Blueprint for CropGPT
# Infrastructure as Code for automatic deployment
# Documentation: https://render.com/docs/infrastructure-as-code

services:
  # Backend FastAPI Web Service
  - type: web
    name: cropgpt-backend
    runtime: python
    region: oregon  # Choose: oregon, frankfurt, singapore
    plan: starter  # Or: free (spins down after 15 min)
    buildCommand: cd backend && pip install -r requirements.txt
    startCommand: cd backend && uvicorn server:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /api/health
    
    envVars:
      # Database - REQUIRED: Add these manually in Render dashboard
      - key: MONGO_URL
        sync: false  # Add manually: mongodb+srv://...
      - key: DB_NAME
        value: farmchat
      
      # Redis Cache - REQUIRED: Add manually in Render dashboard
      - key: REDIS_URL
        sync: false  # Add manually: redis://...
      
      # Authentication - REQUIRED: Generate 32-char secret
      - key: JWT_SECRET
        sync: false  # Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
      - key: JWT_EXPIRATION_HOURS
        value: 24
      
      # AI Service API Keys - REQUIRED: Add your actual keys
      - key: CEREBRAS_API_KEY
        sync: false  # Add manually: csk-xxxxx
      - key: OPENROUTER_API_KEY
        sync: false  # Add manually: sk-or-xxxxx (optional)
      - key: DEEPGRAM_API_KEY
        sync: false  # Add manually (optional for voice)
      
      # External API Keys - OPTIONAL
      - key: EXA_API_KEY
        sync: false  # Add manually (optional for search)
      - key: DATAGOVIN_API_KEY
        sync: false  # Add manually (optional for crop prices)
      
      # MCP Gateway Configuration
      - key: MCP_GATEWAY_URL
        value: http://165.232.190.215:8811
      # - key: MCP_GATEWAY_TOKEN
      #   sync: false  # Add if authentication required
      
      # CORS - UPDATE after frontend deployment
      - key: CORS_ORIGINS
        value: https://cropgpt.onrender.com,https://cropgpt-*.onrender.com
      
      # Server Configuration
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: INFO

  # Frontend React Static Site
  - type: web
    name: cropgpt
    runtime: static
    region: oregon  # Same region as backend for low latency
    buildCommand: cd frontend && npm install --legacy-peer-deps && npm run build
    staticPublishPath: frontend/build
    
    # React Router Configuration
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: X-XSS-Protection
        value: 1; mode=block
      - path: /static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
    
    envVars:
      # Backend URL - UPDATE with your actual backend URL
      - key: REACT_APP_BACKEND_URL
        value: https://cropgpt-backend.onrender.com
      
      # App Configuration
      - key: REACT_APP_VERSION
        value: 1.0.0
      - key: REACT_APP_ENVIRONMENT
        value: production
      
      # Feature Flags
      - key: REACT_APP_ENABLE_VOICE
        value: true
      - key: REACT_APP_ENABLE_WORKFLOWS
        value: true
      - key: REACT_APP_ENABLE_MARKETPLACE
        value: true
      - key: REACT_APP_ENABLE_SCHEMES
        value: true
      
      # Analytics (Optional)
      # - key: REACT_APP_GA_TRACKING_ID
      #   sync: false
      # - key: REACT_APP_SENTRY_DSN
      #   sync: false

# Note: This render.yaml file provides a blueprint for your infrastructure.
# 
# To use this file:
# 1. Commit this file to your repository
# 2. Go to Render Dashboard → "New" → "Blueprint"
# 3. Connect your GitHub repository
# 4. Render will create all services automatically
# 5. Add the required secret environment variables manually:
#    - MONGO_URL (from MongoDB Atlas)
#    - REDIS_URL (from Redis Cloud)
#    - JWT_SECRET (generate random string)
#    - CEREBRAS_API_KEY (your API key)
#    - Other optional API keys
# 
# Benefits of using render.yaml:
# - Version controlled infrastructure
# - Easy replication and disaster recovery
# - Consistent deployments across environments
# - Automatic service creation and configuration
# 
# For manual deployment without render.yaml:
# Follow the step-by-step guide in RENDER_DEPLOYMENT_GUIDE.md
